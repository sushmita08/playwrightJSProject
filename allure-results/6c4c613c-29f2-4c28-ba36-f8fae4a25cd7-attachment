# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Home Page >> should display test requests
- Location: /Users/zineone/Assesment/tests/home-page.spec.js:53:3

# Error details

```
Error: page.screenshot: Test ended.
Call log:
  - taking page screenshot
  - waiting for fonts to load...
  - fonts loaded

    at /Users/zineone/Assesment/tests/home-page.spec.js:56:18
```

# Test source

```ts
   1 | const { test } = require('@playwright/test');
   2 | const { allure } = require('@playwright/test');
   3 |
   4 | test.describe('Home Page', () => {
   5 |   test.beforeEach(async ({ page }) => {
   6 |     test.step('Login to application', async () => {
   7 |       await page.goto('https://gor-pathology.web.app/');
   8 |       await page.waitForSelector('input[type="email"]', { timeout: 10000 });
   9 |       await page.fill('input[type="email"]', 'test@kennect.io');
  10 |       await page.fill('input[type="password"]', 'Qwerty@1234');
  11 |       await page.click('button[type="submit"]');
  12 |       // Wait for dashboard to load
  13 |       await page.waitForURL('**/dashboard', { timeout: 10000 });
  14 |     });
  15 |   });
  16 |
  17 |   test('should display dashboard after login', async ({ page }) => {
  18 |     test.step('Verify dashboard content', async () => {
  19 |       // Wait for main dashboard container
  20 |       await page.waitForSelector('.dashboard-container, .main-content', { timeout: 10000 });
  21 |       // Wait for navigation menu
  22 |       await page.waitForSelector('nav, .navigation-menu', { timeout: 10000 });
  23 |       await page.screenshot({ path: 'test-results/dashboard-view.png' });
  24 |     });
  25 |   });
  26 |
  27 |   test('should navigate to cost calculator', async ({ page }) => {
  28 |     test.step('Navigate to cost calculator', async () => {
  29 |       // Click on cost calculator link/button
  30 |       await page.click('text=Cost Calculator, a[href*="calculator"]');
  31 |       await page.waitForURL('**/calculator', { timeout: 10000 });
  32 |     });
  33 |
  34 |     test.step('Verify calculator page', async () => {
  35 |       await page.waitForSelector('form, .calculator-form', { timeout: 10000 });
  36 |       await page.screenshot({ path: 'test-results/calculator-view.png' });
  37 |     });
  38 |   });
  39 |
  40 |   test('should navigate to patient list', async ({ page }) => {
  41 |     test.step('Navigate to patient list', async () => {
  42 |       // Click on patients link/button
  43 |       await page.click('text=Patients, a[href*="patients"]');
  44 |       await page.waitForURL('**/patients', { timeout: 10000 });
  45 |     });
  46 |
  47 |     test.step('Verify patient list page', async () => {
  48 |       await page.waitForSelector('table, .patient-list', { timeout: 10000 });
  49 |       await page.screenshot({ path: 'test-results/patient-list-view.png' });
  50 |     });
  51 |   });
  52 |
  53 |   test('should display test requests', async ({ page }) => {
  54 |     test.step('Check test requests section', async () => {
  55 |       const requests = await page.$$('.test-request, .request-item');
> 56 |       await page.screenshot({ path: 'test-results/requests-view.png' });
     |                  ^ Error: page.screenshot: Test ended.
  57 |     });
  58 |   });
  59 |
  60 |   test('should update test request status', async ({ page }) => {
  61 |     test.step('Find and update test request', async () => {
  62 |       // Look for status dropdown or button
  63 |       await page.click('.status-select, .status-button');
  64 |       // Select a new status
  65 |       await page.click('text=Completed, text=Done');
  66 |       // Wait for update confirmation
  67 |       await page.waitForSelector('.success-message, .status-updated', {
  68 |         timeout: 10000,
  69 |         state: 'visible'
  70 |       });
  71 |       await page.screenshot({ path: 'test-results/status-updated.png' });
  72 |     });
  73 |   });
  74 | }); 
```